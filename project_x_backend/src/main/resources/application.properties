spring.application.name=projectx

# 포트 설정 #
server.port = 8080
server.servlet.context-path=/

# oracle DB 설정 #
#spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
#spring.datasource.url=jdbc:oracle:thin:@//localhost:1521/orclpdb
#spring.datasource.username=pjh
#spring.datasource.password=1111

spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@//localhost:1521/FREEPDB1
spring.datasource.username=ora_user2
spring.datasource.password=1234


# ===== HikariCP 연결풀 설정 (성능 최적화) =====
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1800000

# ===== JPA/Hibernate 설정 =====
# Oracle에서는 테이블 자동생성 대신 validate 사용
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.OracleDialect
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Oracle12cDialect
spring.jpa.properties.hibernate.default_batch_fetch_size=100

# -------- jpa 설정부분 --------

# hibernate 설정
spring.jpa.open-in-view=true

# 프로젝트 실행시 자동으로 DDL 생성: create, update, none
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.OracleDialect
spring.jpa.properties.hibernate.use_sql_comments=true

# entity 생성시, DB생성시 변수명 그대로 컬럼필드 사용
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# jpa numbering 전략
spring.jpa.hibernate.use-new-id-generator-mappings=false

# JPA 처리시에 발생하는 SQL을 보여줄것인지 결정
spring.jpa.show-sql=true
logging.level.com.pix=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
# JPA 구현체인 Hibernate가 동작하면서 발생하는 SQL을 formatting해서 출력
spring.jpa.properties.hibernate.format_sql=true

# ===== 파일업로드 크기 제한 =====
spring.servlet.multipart.maxFileSize=20MB
spring.servlet.multipart.maxRequestSize=10MB
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Dev Tools
spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true

# 서버 에러 상세 정보 표시 (개발용만)
server.error.include-stacktrace=always
server.error.include-message=always

# ===== API 키 설정 =====
# DeepL 번역 API 키 (여기에안올림)
deepl.api.key=a4465cef-1066-48f2-81e6

# 토스페이먼츠 API 키 (여기에안올림)
toss.payments.client-key=test_ck_
toss.payments.secret-key=test_sk_

# ===== CORS 설정 (추가 보안) =====
# 허용할 Origin 도메인들
app.cors.allowed-origins=http://localhost:3000,http://localhost:5173,http://127.0.0.1:3000,http://127.0.0.1:5173

# ===== JSON 설정 =====
spring.jackson.serialization.indent-output=true
spring.jackson.serialization.write-dates-as-timestamps=false

# 이메일인증 설정 #
spring.mail.host=smtp.naver.com
spring.mail.port=587
spring.mail.username=ydjxlst@naver.com
spring.mail.password=K98HET4YFPDT
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
# ??? ?? ?? ?? (?? ???)
app.upload-dir=./uploads/stickers

