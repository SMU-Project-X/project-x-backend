spring.application.name=project_x_backend

# 1. jsp 위치 설정 #
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

# ===== 서버 설정 =====
server.port=8080

# ===== Oracle 데이터베이스 설정 =====
# TODO: 실제 Oracle 접속 정보로 변경 필요
spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@//localhost:1521/FREEPDB1
spring.datasource.username=ora_user2
spring.datasource.password=1234


# ===== HikariCP 연결풀 설정 (성능 최적화) =====
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1800000

# ===== JPA/Hibernate 설정 =====
# Oracle에서는 테이블 자동생성 대신 validate 사용
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.OracleDialect
spring.jpa.properties.hibernate.default_batch_fetch_size=100

# -------- jpa 설정부분 --------
# hibernate 설정
spring.jpa.open-in-view=true
# 프로젝트 실행시 자동으로 DDL 생성 : create,update,none – 컬럼생성은 알파벳 순으로 생성됨.
spring.jpa.hibernate.ddl-auto= update
# entity 생성시, DB생성시 변수명 그대로 유 컬럼필드 사용
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
# jpa numbering 전략
spring.jpa.hibernate.use-new-id-generator-mappings=false
# JPA 처리시에 발생하는 SQL을 보여줄것인지 결정
spring.jpa.show-sql=true
# JPA 구현체인 Hibernate가 동작하면서 발생하는 SQL을 formating해서 출력
spring.jpa.properties.hibernate.format_sql=true
# 2, 1, 10, 5, 5 = 23 X : 20MB  15,3 : X 10
# 파일업로드 크기 제한 - 최대파일용량:20MB,  파일1개최대용량:10MB
spring.servlet.multipart.maxFileSize=20MB
spring.servlet.multipart.maxRequestSize=10MB

# ===== 로깅 설정 =====
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.com.pix=DEBUG

# ===== 개발 편의 설정 =====
spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true

# ===== JSON 설정 =====
spring.jackson.serialization.indent-output=true
spring.jackson.serialization.write-dates-as-timestamps=false
